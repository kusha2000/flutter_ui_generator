{
    "prompt": "Design a vibrant time tracker with gradient timer, start/pause button, task input, active session card, and colorful recent task grid.",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  bool isRunning = false;\n  int seconds = 0;\n  String currentTask = 'UI Design';\n  TextEditingController taskController = TextEditingController();\n\n  String formatTime(int totalSeconds) {\n    int hours = totalSeconds ~/ 3600;\n    int minutes = (totalSeconds % 3600) ~/ 60;\n    int secs = totalSeconds % 60;\n    return '${hours.toString().padLeft(2, '0')}:${minutes.toString().padLeft(2, '0')}:${secs.toString().padLeft(2, '0')}';\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.grey[100],\n      appBar: AppBar(\n        title: Text('Time Tracker', style: TextStyle(fontWeight: FontWeight.bold)),\n        backgroundColor: Colors.purple[600],\n        foregroundColor: Colors.white,\n        elevation: 0,\n      ),\n      body: Padding(\n        padding: EdgeInsets.all(16),\n        child: Column(\n          children: [\n            Container(\n              padding: EdgeInsets.all(20),\n              decoration: BoxDecoration(\n                gradient: LinearGradient(colors: [Colors.purple[300]!, Colors.yellow[300]!]),\n                borderRadius: BorderRadius.circular(12),\n              ),\n              child: Text(\n                formatTime(seconds),\n                style: TextStyle(\n                  fontSize: 48,\n                  fontWeight: FontWeight.bold,\n                  fontFamily: 'Roboto',\n                  color: Colors.white,\n                ),\n              ),\n            ),\n            SizedBox(height: 20),\n            AnimatedContainer(\n              duration: Duration(milliseconds: 200),\n              child: ElevatedButton(\n                onPressed: () => setState(() => isRunning = !isRunning),\n                style: ElevatedButton.styleFrom(\n                  backgroundColor: isRunning ? Colors.yellow[600] : Colors.purple[600],\n                  padding: EdgeInsets.symmetric(horizontal: 48, vertical: 12),\n                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n                ),\n                child: Text(\n                  isRunning ? 'PAUSE' : 'START',\n                  style: TextStyle(fontSize: 18, color: Colors.white),\n                ),\n              ),\n            ),\n            SizedBox(height: 20),\n            TextField(\n              controller: taskController,\n              decoration: InputDecoration(\n                hintText: 'What are you working on?',\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(12),\n                  borderSide: BorderSide(color: Colors.purple[300]!, width: 2),\n                ),\n              ),\n            ),\n            SizedBox(height: 16),\n            if (isRunning)\n              Card(\n                color: Colors.purple[50],\n                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n                child: Padding(\n                  padding: EdgeInsets.all(12),\n                  child: Column(\n                    children: [\n                      Text(currentTask, style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),\n                      Text('${formatTime(seconds)} elapsed', style: TextStyle(color: Colors.purple[700])),\n                      IconButton(\n                        onPressed: () => setState(() => isRunning = false),\n                        icon: Icon(Icons.stop, color: Colors.red[600]),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            SizedBox(height: 16),\n            Expanded(\n              child: GridView.count(\n                crossAxisCount: 2,\n                crossAxisSpacing: 8,\n                mainAxisSpacing: 8,\n                children: List.generate(3, (index) => Card(\n                  color: index % 2 == 0 ? Colors.purple[100] : Colors.yellow[100],\n                  child: Padding(\n                    padding: EdgeInsets.all(8),\n                    child: Column(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      children: [\n                        Text('Task ${index + 1}', style: TextStyle(fontWeight: FontWeight.bold)),\n                        Text('1h ${index * 15}m â€¢ Today'),\n                      ],\n                    ),\n                  ),\n                )),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "category": "productivity",
    "tags": [
        "timer",
        "tracking",
        "productivity",
        "task",
        "colorful",
        "grid"
    ],
    "components": [
        "Scaffold",
        "AppBar",
        "Container",
        "Text",
        "ElevatedButton",
        "TextField",
        "Card",
        "GridView",
        "IconButton"
    ],
    "layout_type": "Column"
}