{
    "prompt": "App lock screen",
    "flutter_code": "class GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  String pin = '';\n  final int pinLength = 4;\n\n  void _onNumberPressed(String number) {\n    if (pin.length < pinLength) {\n      setState(() {\n        pin += number;\n      });\n    }\n  }\n\n  void _onDeletePressed() {\n    if (pin.isNotEmpty) {\n      setState(() {\n        pin = pin.substring(0, pin.length - 1);\n      });\n    }\n  }\n\n  Widget _buildPinCircle(bool filled) {\n    return Container(\n      width: 65,\n      height: 65,\n      decoration: BoxDecoration(\n        shape: BoxShape.circle,\n        border: Border.all(color: Colors.white.withOpacity(0.3), width: 2),\n        color: filled ? Colors.amber : Colors.white.withOpacity(0.1),\n        boxShadow: [\n          BoxShadow(\n            color: Colors.amber.withOpacity(filled ? 0.3 : 0),\n            blurRadius: 10,\n            spreadRadius: 2,\n          ),\n        ],\n      ),\n      child: filled ? Icon(Icons.circle, color: Colors.amber, size: 25) : null,\n    );\n  }\n\n  Widget _buildKeypadButton(String text, {VoidCallback? onPressed}) {\n    return Container(\n      width: 75,\n      height: 75,\n      child: ElevatedButton(\n        onPressed: onPressed,\n        style: ElevatedButton.styleFrom(\n          backgroundColor: Colors.white.withOpacity(0.1),\n          foregroundColor: Colors.white,\n          shape: CircleBorder(),\n          elevation: 5,\n          side: BorderSide(color: Colors.white.withOpacity(0.2)),\n        ),\n        child: Text(text, style: TextStyle(fontSize: 26, fontWeight: FontWeight.w600)),\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.black,\n      body: Container(\n        decoration: BoxDecoration(\n          gradient: LinearGradient(\n            begin: Alignment.topCenter,\n            end: Alignment.bottomCenter,\n            colors: [Colors.black, Colors.grey[900]!],\n          ),\n        ),\n        child: Padding(\n          padding: EdgeInsets.all(25),\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.center,\n            children: [\n              Container(\n                decoration: BoxDecoration(\n                  shape: BoxShape.circle,\n                  boxShadow: [\n                    BoxShadow(\n                      color: Colors.amber.withOpacity(0.3),\n                      blurRadius: 20,\n                      spreadRadius: 5,\n                    ),\n                  ],\n                ),\n                child: Icon(Icons.lock, size: 90, color: Colors.amber),\n              ),\n              SizedBox(height: 35),\n              Text('Secure Access', style: TextStyle(fontSize: 30, fontWeight: FontWeight.bold, color: Colors.white)),\n              SizedBox(height: 12),\n              Text('Authenticate with PIN', style: TextStyle(fontSize: 16, color: Colors.grey[400])),\n              SizedBox(height: 55),\n              Row(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: List.generate(pinLength, (index) => Padding(\n                  padding: EdgeInsets.symmetric(horizontal: 12),\n                  child: _buildPinCircle(index < pin.length),\n                )),\n              ),\n              SizedBox(height: 55),\n              GridView.builder(\n                shrinkWrap: true,\n                physics: NeverScrollableScrollPhysics(),\n                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                  crossAxisCount: 3,\n                  crossAxisSpacing: 25,\n                  mainAxisSpacing: 25,\n                  childAspectRatio: 1,\n                ),\n                itemCount: 12,\n                itemBuilder: (context, index) {\n                  if (index < 9) {\n                    String number = (index + 1).toString();\n                    return _buildKeypadButton(number, onPressed: () => _onNumberPressed(number));\n                  } else if (index == 9) {\n                    return Container();\n                  } else if (index == 10) {\n                    return _buildKeypadButton('0', onPressed: () => _onNumberPressed('0'));\n                  } else {\n                    return _buildKeypadButton('âŒ«', onPressed: _onDeletePressed);\n                  }\n                },\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "category": "security",
    "tags": [
        "app_lock",
        "dark_theme",
        "glassmorphism",
        "pin",
        "authentication",
        "premium"
    ],
    "components": [
        "Scaffold",
        "Container",
        "Column",
        "Icon",
        "Text",
        "ElevatedButton",
        "GridView",
        "Row"
    ],
    "layout_type": "Column"
}