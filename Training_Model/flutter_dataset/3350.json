{
    "prompt": "Build a responsive nature task manager featuring soft green background, organic fonts, leaf due date icons, scrollable task cards with checkboxes, priority badges, and bottom olive navigation.",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  int _selectedIndex = 0;\n  List<Map<String, dynamic>> tasks = [\n    {'title': 'Finish report', 'description': 'Complete quarterly report', 'priority': 'High', 'dueDate': '2025-08-10', 'completed': false, 'priorityColor': Colors.red},\n    {'title': 'Team meeting', 'description': 'Discuss project milestones', 'priority': 'Medium', 'dueDate': '2025-08-12', 'completed': true, 'priorityColor': Colors.orange},\n    {'title': 'Update docs', 'description': 'Revise API documentation', 'priority': 'Low', 'dueDate': '2025-08-15', 'completed': false, 'priorityColor': Colors.green}\n  ];\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.green[50],\n      appBar: AppBar(\n        title: Text('Nature Tasks', style: TextStyle(fontWeight: FontWeight.bold, fontFamily: 'Roboto')),\n        backgroundColor: Colors.green[800],\n        foregroundColor: Colors.white,\n        elevation: 2,\n        actions: [IconButton(icon: Icon(Icons.notifications), onPressed: () {})],\n      ),\n      body: ListView.builder(\n        padding: EdgeInsets.all(16),\n        itemCount: tasks.length,\n        itemBuilder: (context, index) {\n          final task = tasks[index];\n          return Card(\n            margin: EdgeInsets.only(bottom: 12),\n            elevation: 2,\n            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n            child: Padding(\n              padding: EdgeInsets.all(16),\n              child: Row(\n                children: [\n                  Checkbox(\n                    value: task['completed'],\n                    onChanged: (value) { setState(() { task['completed'] = value!; }); },\n                    activeColor: Colors.green[800],\n                  ),\n                  SizedBox(width: 12),\n                  Expanded(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\n                          task['title'],\n                          style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, decoration: task['completed'] ? TextDecoration.lineThrough : null),\n                        ),\n                        SizedBox(height: 4),\n                        Text(\n                          task['description'],\n                          style: TextStyle(fontSize: 14, color: Colors.grey[600]),\n                        ),\n                        SizedBox(height: 8),\n                        Row(\n                          children: [\n                            Container(\n                              padding: EdgeInsets.symmetric(horizontal: 8, vertical: 4),\n                              decoration: BoxDecoration(color: task['priorityColor'], borderRadius: BorderRadius.circular(12)),\n                              child: Text(task['priority'], style: TextStyle(color: Colors.white, fontSize: 12)),\n                            ),\n                            SizedBox(width: 12),\n                            Icon(Icons.local_florist, size: 16, color: Colors.green[600]),\n                            SizedBox(width: 4),\n                            Text(task['dueDate'], style: TextStyle(fontSize: 12, color: Colors.grey[600])),\n                          ],\n                        ),\n                      ],\n                    ),\n                  ),\n                  IconButton(icon: Icon(Icons.more_vert), onPressed: () {}),\n                ],\n              ),\n            ),\n          );\n        },\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {},\n        backgroundColor: Colors.green[800],\n        child: Icon(Icons.add, color: Colors.white),\n      ),\n      bottomNavigationBar: BottomNavigationBar(\n        selectedItemColor: Colors.green[800],\n        currentIndex: _selectedIndex,\n        onTap: (index) { setState(() { _selectedIndex = index; }); },\n        items: [\n          BottomNavigationBarItem(icon: Icon(Icons.task_alt), label: 'Tasks'),\n          BottomNavigationBarItem(icon: Icon(Icons.folder_outlined), label: 'Projects'),\n          BottomNavigationBarItem(icon: Icon(Icons.person_outline), label: 'Profile'),\n        ],\n      ),\n    );\n  }\n}",
    "category": "productivity",
    "tags": [
        "task",
        "manager",
        "todo",
        "list",
        "checkbox",
        "cards",
        "navigation",
        "material design",
        "nature"
    ],
    "components": [
        "Scaffold",
        "AppBar",
        "ListView",
        "Card",
        "Checkbox",
        "FloatingActionButton",
        "BottomNavigationBar"
    ],
    "layout_type": "Column with ListView"
}