{
    "prompt": "Create the toggle interface",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> with TickerProviderStateMixin {\n  bool isDarkMode = false;\n  late AnimationController _bounceController;\n  late Animation<double> _bounceAnimation;\n\n  @override\n  void initState() {\n    super.initState();\n    _bounceController = AnimationController(\n      duration: Duration(milliseconds: 600),\n      vsync: this,\n    );\n    _bounceAnimation = Tween<double>(\n      begin: 1.0,\n      end: 1.2,\n    ).animate(CurvedAnimation(\n      parent: _bounceController,\n      curve: Curves.elasticOut,\n    ));\n  }\n\n  @override\n  void dispose() {\n    _bounceController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Container(\n        decoration: BoxDecoration(\n          gradient: LinearGradient(\n            colors: [Colors.orange[300]!, Colors.pink[300]!],\n            begin: Alignment.topLeft,\n            end: Alignment.bottomRight,\n          ),\n        ),\n        child: Center(\n          child: Container(\n            padding: EdgeInsets.all(40),\n            decoration: BoxDecoration(\n              color: Colors.white.withOpacity(0.9),\n              borderRadius: BorderRadius.circular(30),\n              boxShadow: [\n                BoxShadow(\n                  color: Colors.black.withOpacity(0.1),\n                  blurRadius: 20,\n                  spreadRadius: 5,\n                ),\n              ],\n            ),\n            child: Column(\n              mainAxisSize: MainAxisSize.min,\n              children: [\n                Text(\n                  'üåü Choose Your Vibe! üåü',\n                  style: TextStyle(\n                    fontSize: 24,\n                    fontWeight: FontWeight.bold,\n                    foreground: Paint()\n                      ..shader = LinearGradient(\n                        colors: [Colors.purple, Colors.blue, Colors.green],\n                      ).createShader(Rect.fromLTWH(0, 0, 200, 70)),\n                  ),\n                ),\n                SizedBox(height: 30),\n                AnimatedBuilder(\n                  animation: _bounceAnimation,\n                  builder: (context, child) {\n                    return Transform.scale(\n                      scale: _bounceAnimation.value,\n                      child: GestureDetector(\n                        onTap: () {\n                          setState(() {\n                            isDarkMode = !isDarkMode;\n                          });\n                          _bounceController.forward().then((_) {\n                            _bounceController.reverse();\n                          });\n                        },\n                        child: AnimatedContainer(\n                          duration: Duration(milliseconds: 500),\n                          width: 120,\n                          height: 60,\n                          decoration: BoxDecoration(\n                            borderRadius: BorderRadius.circular(30),\n                            gradient: LinearGradient(\n                              colors: isDarkMode\n                                  ? [Colors.indigo, Colors.purple]\n                                  : [Colors.yellow, Colors.orange],\n                            ),\n                            boxShadow: [\n                              BoxShadow(\n                                color: (isDarkMode ? Colors.purple : Colors.orange).withOpacity(0.4),\n                                blurRadius: 15,\n                                spreadRadius: 3,\n                              ),\n                            ],\n                          ),\n                          child: Stack(\n                            children: [\n                              AnimatedAlign(\n                                duration: Duration(milliseconds: 500),\n                                curve: Curves.bounceOut,\n                                alignment: isDarkMode ? Alignment.centerRight : Alignment.centerLeft,\n                                child: Container(\n                                  width: 50,\n                                  height: 50,\n                                  margin: EdgeInsets.all(5),\n                                  decoration: BoxDecoration(\n                                    shape: BoxShape.circle,\n                                    color: Colors.white,\n                                  ),\n                                  child: Icon(\n                                    isDarkMode ? Icons.nights_stay : Icons.wb_sunny,\n                                    color: isDarkMode ? Colors.indigo : Colors.orange,\n                                    size: 30,\n                                  ),\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    );\n                  },\n                ),\n                SizedBox(height: 30),\n                AnimatedSwitcher(\n                  duration: Duration(milliseconds: 300),\n                  child: Text(\n                    isDarkMode ? 'üåô Dark Mode Activated!' : '‚òÄÔ∏è Light Mode Active!',\n                    key: ValueKey(isDarkMode),\n                    style: TextStyle(\n                      fontSize: 18,\n                      fontWeight: FontWeight.w600,\n                      color: isDarkMode ? Colors.indigo : Colors.orange[700],\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "category": "settings",
    "tags": [
        "playful",
        "colorful",
        "animated",
        "gradient",
        "bounce",
        "icons",
        "fun",
        "entertainment"
    ],
    "components": [
        "AnimatedContainer",
        "AnimatedAlign",
        "AnimatedSwitcher",
        "GestureDetector",
        "AnimationController"
    ],
    "layout_type": "Column"
}