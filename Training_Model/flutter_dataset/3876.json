{
    "prompt": "Build a minimalist monochrome tracker with a centered timer, gray toggle button, bordered task input, session card, and grayscale-styled recent entries.",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  bool isRunning = false;\n  int seconds = 0;\n  String currentTask = 'Mono Task';\n  TextEditingController taskController = TextEditingController();\n\n  String formatTime(int totalSeconds) {\n    int hours = totalSeconds ~/ 3600;\n    int minutes = (totalSeconds % 3600) ~/ 60;\n    int secs = totalSeconds % 60;\n    return '${hours.toString().padLeft(2, '0')}:${minutes.toString().padLeft(2, '0')}:${secs.toString().padLeft(2, '0')}';\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        title: Text('Time Tracker', style: TextStyle(fontWeight: FontWeight.w600)),\n        backgroundColor: Colors.grey[300],\n        foregroundColor: Colors.black,\n        elevation: 0,\n      ),\n      body: Padding(\n        padding: EdgeInsets.all(16),\n        child: Column(\n          children: [\n            Text(\n              formatTime(seconds),\n              style: TextStyle(\n                fontSize: 48,\n                fontWeight: FontWeight.w500,\n                fontFamily: 'Roboto',\n                color: Colors.grey[800],\n              ),\n            ),\n            SizedBox(height: 16),\n            ElevatedButton(\n              onPressed: () => setState(() => isRunning = !isRunning),\n              style: ElevatedButton.styleFrom(\n                backgroundColor: isRunning ? Colors.grey[600] : Colors.grey[400],\n                padding: EdgeInsets.symmetric(horizontal: 24, vertical: 8),\n                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n              ),\n              child: Text(\n                isRunning ? 'PAUSE' : 'START',\n                style: TextStyle(fontSize: 16, color: Colors.black),\n              ),\n            ),\n            SizedBox(height: 16),\n            TextField(\n              controller: taskController,\n              decoration: InputDecoration(\n                hintText: 'Task name',\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(8),\n                  borderSide: BorderSide(color: Colors.grey[400]!),\n                ),\n              ),\n              style: TextStyle(color: Colors.grey[800]),\n            ),\n            SizedBox(height: 16),\n            if (isRunning)\n              Card(\n                color: Colors.grey[100],\n                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n                child: Padding(\n                  padding: EdgeInsets.all(12),\n                  child: Row(\n                    children: [\n                      Expanded(\n                        child: Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            Text(currentTask, style: TextStyle(fontSize: 16, color: Colors.grey[800])),\n                            Text('${formatTime(seconds)} elapsed', style: TextStyle(color: Colors.grey[600])),\n                          ],\n                        ),\n                      ),\n                      IconButton(\n                        onPressed: () => setState(() => isRunning = false),\n                        icon: Icon(Icons.stop, color: Colors.grey[800]),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            SizedBox(height: 16),\n            Expanded(\n              child: ListView.separated(\n                itemCount: 3,\n                separatorBuilder: (context, index) => SizedBox(height: 8),\n                itemBuilder: (context, index) => ListTile(\n                  title: Text('Task ${index + 1}', style: TextStyle(color: Colors.grey[800])),\n                  subtitle: Text('1h ${index * 15}m â€¢ Today', style: TextStyle(color: Colors.grey[600])),\n                  tileColor: Colors.grey[100],\n                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "category": "productivity",
    "tags": [
        "timer",
        "tracking",
        "productivity",
        "task",
        "monochromatic",
        "minimal"
    ],
    "components": [
        "Scaffold",
        "AppBar",
        "Text",
        "ElevatedButton",
        "TextField",
        "Card",
        "ListView",
        "ListTile",
        "IconButton"
    ],
    "layout_type": "Column"
}