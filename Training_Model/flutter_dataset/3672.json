{
    "prompt": "Build a dark-themed neon language selection interface with glowing icon, language cards, and gradient continue button.",
    "flutter_code": "class GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> with TickerProviderStateMixin {\n  String? selectedLanguage;\n  late AnimationController _glowController;\n  \n  final List<Map<String, String>> languages = [\n    {'code': 'en', 'native': 'English', 'english': 'English', 'flag': '🇺🇸'},\n    {'code': 'es', 'native': 'Español', 'english': 'Spanish', 'flag': '🇪🇸'},\n    {'code': 'fr', 'native': 'Français', 'english': 'French', 'flag': '🇫🇷'},\n    {'code': 'de', 'native': 'Deutsch', 'english': 'German', 'flag': '🇩🇪'},\n    {'code': 'zh', 'native': '中文', 'english': 'Chinese', 'flag': '🇨🇳'},\n    {'code': 'ja', 'native': '日本語', 'english': 'Japanese', 'flag': '🇯🇵'},\n    {'code': 'ar', 'native': 'العربية', 'english': 'Arabic', 'flag': '🇸🇦'},\n    {'code': 'ru', 'native': 'Русский', 'english': 'Russian', 'flag': '🇷🇺'},\n    {'code': 'pt', 'native': 'Português', 'english': 'Portuguese', 'flag': '🇵🇹'},\n    {'code': 'it', 'native': 'Italiano', 'english': 'Italian', 'flag': '🇮🇹'},\n  ];\n  \n  @override\n  void initState() {\n    super.initState();\n    _glowController = AnimationController(\n      duration: Duration(seconds: 2),\n      vsync: this,\n    )..repeat(reverse: true);\n  }\n  \n  @override\n  void dispose() {\n    _glowController.dispose();\n    super.dispose();\n  }\n  \n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Color(0xFF0A0A0A),\n      body: SafeArea(\n        child: Padding(\n          padding: EdgeInsets.all(24),\n          child: Column(\n            children: [\n              SizedBox(height: 40),\n              AnimatedBuilder(\n                animation: _glowController,\n                builder: (context, child) {\n                  return Container(\n                    width: 80,\n                    height: 80,\n                    decoration: BoxDecoration(\n                      shape: BoxShape.circle,\n                      gradient: LinearGradient(\n                        colors: [Color(0xFF8B5CF6), Color(0xFF06B6D4)],\n                      ),\n                      boxShadow: [\n                        BoxShadow(\n                          color: Color(0xFF8B5CF6).withOpacity(0.3 + 0.2 * _glowController.value),\n                          blurRadius: 20 + 10 * _glowController.value,\n                          spreadRadius: 2,\n                        ),\n                      ],\n                    ),\n                    child: Icon(Icons.translate, color: Colors.white, size: 40),\n                  );\n                },\n              ),\n              SizedBox(height: 32),\n              Text(\n                'Choose Language',\n                style: TextStyle(\n                  fontSize: 28,\n                  fontWeight: FontWeight.bold,\n                  color: Colors.white,\n                  shadows: [\n                    Shadow(\n                      color: Color(0xFF8B5CF6).withOpacity(0.5),\n                      blurRadius: 10,\n                    ),\n                  ],\n                ),\n                textAlign: TextAlign.center,\n              ),\n              SizedBox(height: 40),\n              Expanded(\n                child: GridView.builder(\n                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                    crossAxisCount: 2,\n                    crossAxisSpacing: 16,\n                    mainAxisSpacing: 16,\n                    childAspectRatio: 2.5,\n                  ),\n                  itemCount: languages.length,\n                  itemBuilder: (context, index) {\n                    final lang = languages[index];\n                    final isSelected = selectedLanguage == lang['code'];\n                    return GestureDetector(\n                      onTap: () => setState(() => selectedLanguage = lang['code']),\n                      child: Container(\n                        decoration: BoxDecoration(\n                          color: Color(0xFF1A1A1A),\n                          borderRadius: BorderRadius.circular(12),\n                          border: Border.all(\n                            color: isSelected ? Color(0xFF8B5CF6) : Color(0xFF333333),\n                            width: isSelected ? 2 : 1,\n                          ),\n                          boxShadow: isSelected ? [\n                            BoxShadow(\n                              color: Color(0xFF8B5CF6).withOpacity(0.3),\n                              blurRadius: 15,\n                              spreadRadius: 1,\n                            ),\n                          ] : null,\n                        ),\n                        child: Padding(\n                          padding: EdgeInsets.all(12),\n                          child: Row(\n                            children: [\n                              Text(\n                                lang['flag']!,\n                                style: TextStyle(fontSize: 24),\n                              ),\n                              SizedBox(width: 12),\n                              Expanded(\n                                child: Column(\n                                  crossAxisAlignment: CrossAxisAlignment.start,\n                                  mainAxisAlignment: MainAxisAlignment.center,\n                                  children: [\n                                    Text(\n                                      lang['native']!,\n                                      style: TextStyle(\n                                        fontSize: 16,\n                                        fontWeight: FontWeight.w600,\n                                        color: Colors.white,\n                                      ),\n                                    ),\n                                    Text(\n                                      lang['english']!,\n                                      style: TextStyle(\n                                        fontSize: 12,\n                                        color: Color(0xFF8B5CF6),\n                                      ),\n                                    ),\n                                  ],\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    );\n                  },\n                ),\n              ),\n              SizedBox(height: 24),\n              Container(\n                width: double.infinity,\n                height: 50,\n                decoration: BoxDecoration(\n                  gradient: selectedLanguage != null\n                      ? LinearGradient(\n                          colors: [Color(0xFF8B5CF6), Color(0xFF06B6D4)],\n                        )\n                      : null,\n                  color: selectedLanguage == null ? Color(0xFF333333) : null,\n                  borderRadius: BorderRadius.circular(12),\n                ),\n                child: ElevatedButton(\n                  onPressed: selectedLanguage != null ? () {} : null,\n                  style: ElevatedButton.styleFrom(\n                    backgroundColor: Colors.transparent,\n                    foregroundColor: Colors.white,\n                    elevation: 0,\n                    shadowColor: Colors.transparent,\n                    shape: RoundedRectangleBorder(\n                      borderRadius: BorderRadius.circular(12),\n                    ),\n                  ),\n                  child: Text(\n                    'Continue',\n                    style: TextStyle(\n                      fontSize: 16,\n                      fontWeight: FontWeight.w600,\n                    ),\n                  ),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "category": "onboarding",
    "tags": [
        "language",
        "selection",
        "dark",
        "theme",
        "neon",
        "animated",
        "gradient"
    ],
    "components": [
        "GridView",
        "Container",
        "ElevatedButton",
        "AnimatedBuilder",
        "LinearGradient"
    ],
    "layout_type": "Column"
}