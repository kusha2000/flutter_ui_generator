{
    "prompt": "Mobile Splash Screen",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Container(\n        decoration: BoxDecoration(\n          gradient: RadialGradient(\n            center: Alignment.center,\n            radius: 0.8,\n            colors: [Color(0xFFFF6200), Color(0xFFB71C1C)],\n          ),\n        ),\n        child: SafeArea(\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            children: [\n              SizedBox(height: 60),\n              Container(\n                width: 100,\n                height: 100,\n                decoration: BoxDecoration(\n                  shape: BoxShape.circle,\n                  color: Colors.white,\n                  boxShadow: [\n                    BoxShadow(\n                      color: Colors.black26,\n                      blurRadius: 8,\n                      offset: Offset(0, 2),\n                    ),\n                  ],\n                ),\n                child: Icon(\n                  Icons.star,\n                  size: 50,\n                  color: Color(0xFFFF6200),\n                ),\n              ),\n              Text(\n                'SparkApp',\n                style: TextStyle(\n                  fontSize: 36,\n                  fontWeight: FontWeight.w700,\n                  color: Colors.white,\n                  letterSpacing: 1.5,\n                ),\n              ),\n              SizedBox(height: 20),\n              Container(\n                height: 40,\n                child: CustomPaint(\n                  painter: WavePainter(),\n                  child: Container(),\n                ),\n              ),\n              SizedBox(height: 30),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass WavePainter extends CustomPainter {\n  @override\n  void paint(Canvas canvas, Size size) {\n    final paint = Paint()\n      ..color = Colors.white.withOpacity(0.7)\n      ..style = PaintingStyle.stroke\n      ..strokeWidth = 3;\n    final path = Path();\n    path.moveTo(0, size.height / 2);\n    for (double i = 0; i < size.width; i++) {\n      path.lineTo(i, size.height / 2 + sin(i * 0.05) * 10);\n    }\n    canvas.drawPath(path, paint);\n  }\n\n  @override\n  bool shouldRepaint(covariant CustomPainter oldDelegate) => false;\n}",
    "category": "onboarding",
    "tags": [
        "splash",
        "logo",
        "gradient",
        "loading",
        "wave",
        "brand"
    ],
    "components": [
        "Container",
        "Column",
        "Icon",
        "Text",
        "CustomPaint",
        "BoxDecoration",
        "RadialGradient"
    ],
    "layout_type": "Column"
}