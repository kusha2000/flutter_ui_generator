{
    "prompt": "Create a grid-based wishlist page layout with a mint green and teal color scheme. Display items in a 2-column grid where each card shows a large icon at the top, product name below, price in bold, and a heart icon at the bottom right corner. Include a search bar below the app bar and category filter chips. The app bar should have a gradient background from teal to mint green. Use rounded square cards with soft shadows and a clean, modern aesthetic with plenty of white space.",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  List<Map<String, dynamic>> wishlistItems = [\n    {'name': 'Bluetooth Speaker', 'price': '79.99', 'icon': Icons.speaker, 'category': 'Audio'},\n    {'name': 'Fitness Tracker', 'price': '199.99', 'icon': Icons.fitness_center, 'category': 'Health'},\n    {'name': 'Camera', 'price': '899.99', 'icon': Icons.camera_alt, 'category': 'Photography'},\n    {'name': 'Drone', 'price': '599.99', 'icon': Icons.flight, 'category': 'Tech'},\n    {'name': 'Backpack', 'price': '59.99', 'icon': Icons.backpack, 'category': 'Fashion'},\n    {'name': 'Coffee Maker', 'price': '129.99', 'icon': Icons.coffee, 'category': 'Home'},\n  ];\n\n  String selectedCategory = 'All';\n  List<String> categories = ['All', 'Audio', 'Health', 'Photography', 'Tech', 'Fashion', 'Home'];\n\n  void removeItem(int index) {\n    setState(() {\n      wishlistItems.removeAt(index);\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    List<Map<String, dynamic>> filteredItems = selectedCategory == 'All'\n        ? wishlistItems\n        : wishlistItems.where((item) => item['category'] == selectedCategory).toList();\n\n    return Scaffold(\n      backgroundColor: Colors.grey[50],\n      appBar: AppBar(\n        backgroundColor: Colors.transparent,\n        elevation: 0,\n        flexibleSpace: Container(\n          decoration: BoxDecoration(\n            gradient: LinearGradient(\n              colors: [Colors.teal[400]!, Colors.green[300]!],\n              begin: Alignment.topLeft,\n              end: Alignment.bottomRight,\n            ),\n          ),\n        ),\n        title: Text('My Wishlist', style: TextStyle(color: Colors.white, fontSize: 22, fontWeight: FontWeight.bold)),\n      ),\n      body: Column(\n        children: [\n          Container(\n            padding: EdgeInsets.all(16),\n            child: TextField(\n              decoration: InputDecoration(\n                hintText: 'Search wishlist...',\n                prefixIcon: Icon(Icons.search, color: Colors.teal[600]),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(25),\n                  borderSide: BorderSide.none,\n                ),\n                filled: true,\n                fillColor: Colors.white,\n              ),\n            ),\n          ),\n          Container(\n            height: 60,\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              padding: EdgeInsets.symmetric(horizontal: 16),\n              itemCount: categories.length,\n              itemBuilder: (context, index) {\n                bool isSelected = categories[index] == selectedCategory;\n                return Container(\n                  margin: EdgeInsets.only(right: 8),\n                  child: FilterChip(\n                    label: Text(categories[index]),\n                    selected: isSelected,\n                    onSelected: (selected) {\n                      setState(() {\n                        selectedCategory = categories[index];\n                      });\n                    },\n                    backgroundColor: Colors.white,\n                    selectedColor: Colors.teal[100],\n                    labelStyle: TextStyle(\n                      color: isSelected ? Colors.teal[700] : Colors.grey[600],\n                      fontWeight: isSelected ? FontWeight.w600 : FontWeight.normal,\n                    ),\n                  ),\n                );\n              },\n            ),\n          ),\n          Expanded(\n            child: filteredItems.isEmpty\n                ? Center(\n                    child: Column(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      children: [\n                        Icon(Icons.favorite_border, size: 80, color: Colors.teal[200]),\n                        SizedBox(height: 16),\n                        Text('No items found', style: TextStyle(fontSize: 18, color: Colors.grey[600])),\n                      ],\n                    ),\n                  )\n                : GridView.builder(\n                    padding: EdgeInsets.all(16),\n                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                      crossAxisCount: 2,\n                      childAspectRatio: 0.8,\n                      crossAxisSpacing: 12,\n                      mainAxisSpacing: 12,\n                    ),\n                    itemCount: filteredItems.length,\n                    itemBuilder: (context, index) {\n                      final item = filteredItems[index];\n                      return Container(\n                        decoration: BoxDecoration(\n                          color: Colors.white,\n                          borderRadius: BorderRadius.circular(16),\n                          boxShadow: [\n                            BoxShadow(\n                              color: Colors.grey.withOpacity(0.1),\n                              spreadRadius: 1,\n                              blurRadius: 8,\n                              offset: Offset(0, 2),\n                            ),\n                          ],\n                        ),\n                        child: Padding(\n                          padding: EdgeInsets.all(16),\n                          child: Column(\n                            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                            children: [\n                              Container(\n                                width: 60,\n                                height: 60,\n                                decoration: BoxDecoration(\n                                  color: Colors.teal[50],\n                                  borderRadius: BorderRadius.circular(12),\n                                ),\n                                child: Icon(item['icon'], size: 32, color: Colors.teal[600]),\n                              ),\n                              Text(\n                                item['name'],\n                                style: TextStyle(fontSize: 14, fontWeight: FontWeight.w500),\n                                textAlign: TextAlign.center,\n                                maxLines: 2,\n                                overflow: TextOverflow.ellipsis,\n                              ),\n                              Text(\n                                item['price'],\n                                style: TextStyle(fontSize: 16, color: Colors.teal[700], fontWeight: FontWeight.bold),\n                              ),\n                              Align(\n                                alignment: Alignment.bottomRight,\n                                child: IconButton(\n                                  icon: Icon(Icons.favorite, color: Colors.red[400], size: 20),\n                                  onPressed: () => removeItem(wishlistItems.indexOf(item)),\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                      );\n                    },\n                  ),\n          ),\n        ],\n      ),\n      floatingActionButton: FloatingActionButton(\n        backgroundColor: Colors.teal[600],\n        child: Icon(Icons.add, color: Colors.white),\n        onPressed: () {},\n      ),\n    );\n  }\n}",
    "category": "e-commerce",
    "tags": [
        "wishlist",
        "grid",
        "search",
        "filter",
        "mint",
        "teal",
        "categories",
        "chips"
    ],
    "components": [
        "Scaffold",
        "AppBar",
        "GridView",
        "TextField",
        "FilterChip",
        "Container",
        "LinearGradient"
    ],
    "layout_type": "Grid"
}