{
    "prompt": "Create a clean time tracking page with monospaced timer, dynamic start/pause button, task input field, active session card, and list of recent tasks in a scrollable layout.",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  bool isRunning = false;\n  int seconds = 0;\n  String currentTask = 'Design Review';\n  TextEditingController taskController = TextEditingController();\n\n  String formatTime(int totalSeconds) {\n    int hours = totalSeconds ~/ 3600;\n    int minutes = (totalSeconds % 3600) ~/ 60;\n    int secs = totalSeconds % 60;\n    return '${hours.toString().padLeft(2, '0')}:${minutes.toString().padLeft(2, '0')}:${secs.toString().padLeft(2, '0')}';\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        title: Text('Time Tracker', style: TextStyle(fontWeight: FontWeight.bold)),\n        backgroundColor: Colors.blue[600],\n        foregroundColor: Colors.white,\n        elevation: 0,\n      ),\n      body: Padding(\n        padding: EdgeInsets.all(20),\n        child: Column(\n          children: [\n            Container(\n              padding: EdgeInsets.all(30),\n              decoration: BoxDecoration(\n                color: Colors.grey[50],\n                borderRadius: BorderRadius.circular(20),\n                border: Border.all(color: Colors.grey[300]!),\n              ),\n              child: Text(\n                formatTime(seconds),\n                style: TextStyle(\n                  fontSize: 48,\n                  fontWeight: FontWeight.bold,\n                  fontFamily: 'monospace',\n                  color: Colors.grey[800],\n                ),\n              ),\n            ),\n            SizedBox(height: 30),\n            ElevatedButton(\n              onPressed: () {\n                setState(() {\n                  isRunning = !isRunning;\n                  if (isRunning) seconds += 1;\n                });\n              },\n              style: ElevatedButton.styleFrom(\n                backgroundColor: isRunning ? Colors.orange[600] : Colors.green[600],\n                padding: EdgeInsets.symmetric(horizontal: 40, vertical: 15),\n                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(25)),\n              ),\n              child: Text(\n                isRunning ? 'PAUSE' : 'START',\n                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.white),\n              ),\n            ),\n            SizedBox(height: 30),\n            TextField(\n              controller: taskController,\n              decoration: InputDecoration(\n                hintText: 'Enter task description',\n                border: OutlineInputBorder(borderRadius: BorderRadius.circular(15)),\n                contentPadding: EdgeInsets.symmetric(horizontal: 15, vertical: 12),\n              ),\n            ),\n            SizedBox(height: 20),\n            if (isRunning)\n              Container(\n                padding: EdgeInsets.all(15),\n                decoration: BoxDecoration(\n                  color: Colors.blue[50],\n                  borderRadius: BorderRadius.circular(12),\n                  border: Border.all(color: Colors.blue[200]!),\n                ),\n                child: Row(\n                  children: [\n                    Expanded(\n                      child: Column(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          Text(currentTask, style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16)),\n                          Text('${formatTime(seconds)} elapsed', style: TextStyle(color: Colors.grey[600])),\n                        ],\n                      ),\n                    ),\n                    IconButton(\n                      onPressed: () => setState(() => isRunning = false),\n                      icon: Icon(Icons.stop, color: Colors.red[600]),\n                    ),\n                  ],\n                ),\n              ),\n            SizedBox(height: 20),\n            Expanded(\n              child: ListView(\n                children: [\n                  ListTile(\n                    title: Text('UI Design'),\n                    subtitle: Text('2h 30m • Today'),\n                    trailing: Icon(Icons.access_time, color: Colors.grey[600]),\n                    tileColor: Colors.grey[50],\n                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n                  ),\n                  SizedBox(height: 8),\n                  ListTile(\n                    title: Text('Code Review'),\n                    subtitle: Text('1h 45m • Yesterday'),\n                    trailing: Icon(Icons.access_time, color: Colors.grey[600]),\n                    tileColor: Colors.grey[50],\n                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n                  ),\n                  SizedBox(height: 8),\n                  ListTile(\n                    title: Text('Meeting'),\n                    subtitle: Text('45m • Yesterday'),\n                    trailing: Icon(Icons.access_time, color: Colors.grey[600]),\n                    tileColor: Colors.grey[50],\n                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n                  ),\n                ],\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "category": "productivity",
    "tags": [
        "timer",
        "tracking",
        "productivity",
        "stopwatch",
        "task",
        "time"
    ],
    "components": [
        "AppBar",
        "Container",
        "Text",
        "ElevatedButton",
        "TextField",
        "ListView",
        "ListTile",
        "IconButton"
    ],
    "layout_type": "Column"
}