{
    "prompt": "Monochrome Minimal Calendar",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  final List<String> dayLabels = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n  final List<List<dynamic>> calendarDates = [\n    [28, 29, 30, 1, 2, 3, 4],\n    [5, 6, 7, 8, 9, 10, 11],\n    [12, 13, 14, 15, 16, 17, 18],\n    [19, 20, 21, 22, 23, 24, 25],\n    [26, 27, 28, 29, 30, 31, 1],\n    [2, 3, 4, 5, 6, 7, 8]\n  ];\n  final List<int> eventDates = [5, 10, 20];\n  final int today = 15;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        backgroundColor: Colors.white,\n        elevation: 0,\n        title: Row(\n          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n          children: [\n            IconButton(\n              icon: Icon(Icons.arrow_back_ios, color: Colors.grey[400], size: 18),\n              onPressed: () {},\n            ),\n            Text(\n              'May 2025',\n              style: TextStyle(\n                color: Colors.grey[400],\n                fontSize: 18,\n                fontFamily: 'Montserrat',\n                fontWeight: FontWeight.w500,\n              ),\n            ),\n            IconButton(\n              icon: Icon(Icons.arrow_forward_ios, color: Colors.grey[400], size: 18),\n              onPressed: () {},\n            ),\n          ],\n        ),\n      ),\n      body: Padding(\n        padding: EdgeInsets.all(12.0),\n        child: Column(\n          children: [\n            Row(\n              children: dayLabels.map((day) => Expanded(\n                child: Center(\n                  child: Text(\n                    day,\n                    style: TextStyle(\n                      color: Colors.grey[600],\n                      fontSize: 12,\n                      fontFamily: 'Montserrat',\n                      fontWeight: FontWeight.w300,\n                    ),\n                  ),\n                ),\n              )).toList(),\n            ),\n            SizedBox(height: 12),\n            ...calendarDates.map((week) => Container(\n              height: 40,\n              child: Row(\n                children: week.map<Widget>((date) {\n                  bool isCurrentMonth = (week == calendarDates[0] && date >= 1) ||\n                      (week != calendarDates[0] && week != calendarDates[5]) ||\n                      (week == calendarDates[5] && date >= 31);\n                  bool isToday = date == today && isCurrentMonth;\n                  bool hasEvent = eventDates.contains(date) && isCurrentMonth;\n                  return Expanded(\n                    child: Column(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      children: [\n                        Text(\n                          date.toString(),\n                          style: TextStyle(\n                            color: isCurrentMonth ? Colors.black : Colors.grey[300],\n                            fontSize: 14,\n                            fontFamily: 'Montserrat',\n                            fontWeight: isToday ? FontWeight.bold : FontWeight.normal,\n                            decoration: isToday ? TextDecoration.underline : TextDecoration.none,\n                            decorationColor: Colors.grey[400],\n                          ),\n                        ),\n                        if (hasEvent)\n                          Container(\n                            margin: EdgeInsets.only(top: 2),\n                            width: 4,\n                            height: 4,\n                            color: Colors.grey[600],\n                          ),\n                      ],\n                    ),\n                  );\n                }).toList(),\n              ),\n            )).toList(),\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {},\n        backgroundColor: Colors.grey[400],\n        mini: true,\n        child: Icon(Icons.add, color: Colors.white, size: 20),\n        tooltip: 'Add Event',\n      ),\n    );\n  }\n}",
    "category": "productivity",
    "tags": [
        "calendar",
        "date",
        "month",
        "grid",
        "events",
        "navigation",
        "minimalist",
        "monochrome"
    ],
    "components": [
        "Scaffold",
        "AppBar",
        "Column",
        "Row",
        "Text",
        "FloatingActionButton",
        "IconButton"
    ],
    "layout_type": "Column"
}