{
    "prompt": "Create a modern search page with a clean, minimalist design. Place a search bar at the top with a magnifying glass icon on the left and a clear button on the right. Below the search bar, include a horizontally scrollable row of filter chips for categories such as 'All', 'Electronics', 'Clothing', 'Accessories', and 'Gadgets'. Display search results in a 2-column grid of cards, each showing a product image placeholder, title, price, and a 5-star rating. Use a white background, teal accent colors for interactive elements, and a subtle shadow for cards. Add a floating action button at the bottom right for advanced filter options. Ensure responsive padding, rounded corners, and modern typography with a sans-serif font.",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  String selectedFilter = 'All';\n  List<String> filters = ['All', 'Electronics', 'Clothing', 'Accessories', 'Gadgets'];\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        title: Text('Search', style: TextStyle(fontWeight: FontWeight.w600, fontFamily: 'Roboto')),\n        backgroundColor: Colors.white,\n        foregroundColor: Colors.black87,\n        elevation: 0,\n      ),\n      body: Column(\n        children: [\n          Padding(\n            padding: EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),\n            child: TextField(\n              decoration: InputDecoration(\n                hintText: 'Search products...',\n                prefixIcon: Icon(Icons.search, color: Colors.teal),\n                suffixIcon: IconButton(\n                  icon: Icon(Icons.clear, color: Colors.teal),\n                  onPressed: () {},\n                ),\n                border: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10),\n                  borderSide: BorderSide(color: Colors.grey.shade300),\n                ),\n                focusedBorder: OutlineInputBorder(\n                  borderRadius: BorderRadius.circular(10),\n                  borderSide: BorderSide(color: Colors.teal, width: 2),\n                ),\n                filled: true,\n                fillColor: Colors.grey.shade100,\n              ),\n            ),\n          ),\n          Container(\n            height: 50,\n            child: ListView.builder(\n              scrollDirection: Axis.horizontal,\n              padding: EdgeInsets.symmetric(horizontal: 16),\n              itemCount: filters.length,\n              itemBuilder: (context, index) {\n                bool isSelected = selectedFilter == filters[index];\n                return Padding(\n                  padding: EdgeInsets.only(right: 8),\n                  child: FilterChip(\n                    label: Text(filters[index]),\n                    selected: isSelected,\n                    onSelected: (selected) {\n                      setState(() {\n                        selectedFilter = filters[index];\n                      });\n                    },\n                    backgroundColor: Colors.grey.shade200,\n                    selectedColor: Colors.teal.shade100,\n                    labelStyle: TextStyle(\n                      color: isSelected ? Colors.teal.shade700 : Colors.grey.shade700,\n                      fontWeight: isSelected ? FontWeight.w600 : FontWeight.normal,\n                      fontFamily: 'Roboto',\n                    ),\n                  ),\n                );\n              },\n            ),\n          ),\n          Expanded(\n            child: GridView.builder(\n              padding: EdgeInsets.all(16),\n              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                crossAxisCount: 2,\n                childAspectRatio: 0.7,\n                crossAxisSpacing: 12,\n                mainAxisSpacing: 12,\n              ),\n              itemCount: 8,\n              itemBuilder: (context, index) {\n                return Card(\n                  elevation: 3,\n                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Expanded(\n                        flex: 3,\n                        child: Container(\n                          decoration: BoxDecoration(\n                            color: Colors.grey.shade200,\n                            borderRadius: BorderRadius.vertical(top: Radius.circular(10)),\n                          ),\n                          child: Center(\n                            child: Icon(Icons.image, size: 40, color: Colors.grey.shade400),\n                          ),\n                        ),\n                      ),\n                      Expanded(\n                        flex: 2,\n                        child: Padding(\n                          padding: EdgeInsets.all(8),\n                          child: Column(\n                            crossAxisAlignment: CrossAxisAlignment.start,\n                            children: [\n                              Text(\n                                'Product ${index + 1}',\n                                style: TextStyle(fontWeight: FontWeight.w600, fontSize: 14, fontFamily: 'Roboto'),\n                                maxLines: 1,\n                                overflow: TextOverflow.ellipsis,\n                              ),\n                              SizedBox(height: 4),\n                              Text(\n                                '\\$${(index + 1) * 15}.99',\n                                style: TextStyle(color: Colors.teal, fontWeight: FontWeight.bold, fontFamily: 'Roboto'),\n                              ),\n                              SizedBox(height: 4),\n                              Row(\n                                children: List.generate(5, (i) => Icon(\n                                  Icons.star,\n                                  size: 12,\n                                  color: i < 4 ? Colors.amber : Colors.grey.shade300,\n                                )),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                );\n              },\n            ),\n          ),\n        ],\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: () {},\n        backgroundColor: Colors.teal,\n        child: Icon(Icons.tune, color: Colors.white),\n      ),\n    );\n  }\n}",
    "category": "search_and_discovery",
    "tags": [
        "search",
        "filters",
        "grid",
        "cards",
        "chips",
        "floating_button",
        "products",
        "e_commerce",
        "minimalist"
    ],
    "components": [
        "Scaffold",
        "AppBar",
        "TextField",
        "ListView",
        "FilterChip",
        "GridView",
        "Card",
        "FloatingActionButton"
    ],
    "layout_type": "Column"
}