{
    "prompt": "Bold black shopping cart with neon borders and checkout",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  List<Map<String, dynamic>> cartItems = [\n    {'name': 'Gaming Headset', 'price': 79.99, 'quantity': 1, 'icon': Icons.headset},\n    {'name': 'Webcam', 'price': 49.99, 'quantity': 1, 'icon': Icons.camera},\n  ];\n\n  @override\n  Widget build(BuildContext context) {\n    double subtotal = cartItems.fold(0, (sum, item) => sum + (item['price'] * item['quantity']));\n    double tax = subtotal * 0.08;\n    double total = subtotal + tax;\n\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Cart'),\n        backgroundColor: Colors.black,\n        foregroundColor: Colors.neonPink,\n      ),\n      backgroundColor: Colors.black,\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView.builder(\n              padding: EdgeInsets.all(16),\n              itemCount: cartItems.length,\n              itemBuilder: (context, index) {\n                final item = cartItems[index];\n                return Card(\n                  margin: EdgeInsets.only(bottom: 12),\n                  elevation: 6,\n                  color: Colors.grey[900],\n                  child: Padding(\n                    padding: EdgeInsets.all(16),\n                    child: Row(\n                      children: [\n                        Icon(item['icon'], size: 56, color: Colors.cyanAccent),\n                        SizedBox(width: 16),\n                        Expanded(\n                          child: Column(\n                            crossAxisAlignment: CrossAxisAlignment.start,\n                            children: [\n                              Text(item['name'], style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.white)),\n                              Text('\\$${item['price'].toStringAsFixed(2)}', style: TextStyle(fontSize: 14, color: Colors.greenAccent)),\n                            ],\n                          ),\n                        ),\n                        Row(\n                          children: [\n                            IconButton(\n                              onPressed: () {\n                                setState(() {\n                                  if (item['quantity'] > 1) item['quantity']--;\n                                });\n                              },\n                              icon: Icon(Icons.remove_circle, color: Colors.neonPink),\n                            ),\n                            Text('${item['quantity']}', style: TextStyle(color: Colors.white)),\n                            IconButton(\n                              onPressed: () {\n                                setState(() {\n                                  item['quantity']++;\n                                });\n                              },\n                              icon: Icon(Icons.add_circle, color: Colors.neonPink),\n                            ),\n                          ],\n                        ),\n                      ],\n                    ),\n                  ),\n                );\n              },\n            ),\n          ),\n          Container(\n            padding: EdgeInsets.all(16),\n            margin: EdgeInsets.all(16),\n            decoration: BoxDecoration(\n              border: Border.all(color: Colors.cyanAccent, width: 2),\n              color: Colors.grey[900],\n            ),\n            child: Column(\n              children: [\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                  children: [\n                    Text('Subtotal:', style: TextStyle(fontSize: 16, color: Colors.white)),\n                    Text('\\$${subtotal.toStringAsFixed(2)}', style: TextStyle(fontSize: 16, color: Colors.white)),\n                  ],\n                ),\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                  children: [\n                    Text('Tax:', style: TextStyle(fontSize: 16, color: Colors.white)),\n                    Text('\\$${tax.toStringAsFixed(2)}', style: TextStyle(fontSize: 16, color: Colors.white)),\n                  ],\n                ),\n                Divider(color: Colors.cyanAccent),\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                  children: [\n                    Text('Total:', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.white)),\n                    Text('\\$${total.toStringAsFixed(2)}', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.white)),\n                  ],\n                ),\n              ],\n            ),\n          ),\n          Padding(\n            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),\n            child: SizedBox(\n              width: double.infinity,\n              child: ElevatedButton(\n                onPressed: () {},\n                style: ElevatedButton.styleFrom(\n                  backgroundColor: Colors.pinkAccent,\n                  padding: EdgeInsets.symmetric(vertical: 16),\n                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n                ),\n                child: Text('Checkout', style: TextStyle(fontSize: 16, color: Colors.white)),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\nextension Colors on Colors {\n  static const neonPink = Color(0xFFFF4081);\n}",
    "category": "ecommerce",
    "tags": [
        "cart",
        "shopping",
        "ecommerce",
        "neon",
        "checkout"
    ],
    "components": [
        "Scaffold",
        "AppBar",
        "ListView",
        "Card",
        "IconButton",
        "ElevatedButton",
        "Container"
    ],
    "layout_type": "Column"
}