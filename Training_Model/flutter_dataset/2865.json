{
    "prompt": "Create a clean time tracker interface with subtle gray timer, minimal toggle button, simple text input, current session display, and recent entries with dividers.",
    "flutter_code": "import 'package:flutter/material.dart';\n\nclass GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  bool isRunning = false;\n  int seconds = 0;\n  String currentTask = 'Design Review';\n  TextEditingController taskController = TextEditingController();\n\n  String formatTime(int totalSeconds) {\n    int hours = totalSeconds ~/ 3600;\n    int minutes = (totalSeconds % 3600) ~/ 60;\n    int secs = totalSeconds % 60;\n    return '${hours.toString().padLeft(2, '0')}:${minutes.toString().padLeft(2, '0')}:${secs.toString().padLeft(2, '0')}';\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        title: Text('Time Tracker', style: TextStyle(fontWeight: FontWeight.w300, fontSize: 20)),\n        backgroundColor: Colors.white,\n        foregroundColor: Colors.grey[800],\n        elevation: 0,\n        centerTitle: true,\n      ),\n      body: Padding(\n        padding: EdgeInsets.all(40),\n        child: Column(\n          children: [\n            SizedBox(height: 40),\n            Text(\n              formatTime(seconds),\n              style: TextStyle(\n                fontSize: 56,\n                fontWeight: FontWeight.w100,\n                color: Colors.grey[700],\n                letterSpacing: 2,\n              ),\n            ),\n            SizedBox(height: 60),\n            Container(\n              width: 80,\n              height: 80,\n              child: FloatingActionButton(\n                onPressed: () {\n                  setState(() {\n                    isRunning = !isRunning;\n                    if (isRunning) seconds += 1;\n                  });\n                },\n                backgroundColor: isRunning ? Colors.grey[300] : Colors.grey[800],\n                elevation: 0,\n                child: Icon(\n                  isRunning ? Icons.pause : Icons.play_arrow,\n                  color: isRunning ? Colors.grey[700] : Colors.white,\n                  size: 32,\n                ),\n              ),\n            ),\n            SizedBox(height: 60),\n            TextField(\n              controller: taskController,\n              style: TextStyle(fontSize: 16, color: Colors.grey[800]),\n              decoration: InputDecoration(\n                hintText: 'Task description',\n                hintStyle: TextStyle(color: Colors.grey[400], fontWeight: FontWeight.w300),\n                border: UnderlineInputBorder(borderSide: BorderSide(color: Colors.grey[300]!)),\n                enabledBorder: UnderlineInputBorder(borderSide: BorderSide(color: Colors.grey[300]!)),\n                focusedBorder: UnderlineInputBorder(borderSide: BorderSide(color: Colors.grey[600]!)),\n                contentPadding: EdgeInsets.symmetric(vertical: 15),\n              ),\n            ),\n            SizedBox(height: 40),\n            if (isRunning)\n              Container(\n                padding: EdgeInsets.all(20),\n                decoration: BoxDecoration(\n                  color: Colors.grey[50],\n                  borderRadius: BorderRadius.circular(4),\n                ),\n                child: Row(\n                  children: [\n                    Container(\n                      width: 3,\n                      height: 40,\n                      color: Colors.grey[400],\n                      margin: EdgeInsets.only(right: 15),\n                    ),\n                    Expanded(\n                      child: Column(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          Text(currentTask, style: TextStyle(fontSize: 16, color: Colors.grey[800])),\n                          SizedBox(height: 5),\n                          Text('${formatTime(seconds)} elapsed', style: TextStyle(color: Colors.grey[500], fontSize: 14)),\n                        ],\n                      ),\n                    ),\n                    IconButton(\n                      onPressed: () => setState(() => isRunning = false),\n                      icon: Icon(Icons.stop, color: Colors.grey[600], size: 20),\n                    ),\n                  ],\n                ),\n              ),\n            SizedBox(height: 40),\n            Expanded(\n              child: ListView.separated(\n                itemCount: 3,\n                separatorBuilder: (context, index) => Divider(color: Colors.grey[200], height: 1),\n                itemBuilder: (context, index) {\n                  List<String> tasks = ['UI Design', 'Code Review', 'Meeting'];\n                  List<String> durations = ['2h 30m • Today', '1h 45m • Yesterday', '45m • Yesterday'];\n                  return Padding(\n                    padding: EdgeInsets.symmetric(vertical: 20),\n                    child: Row(\n                      children: [\n                        Expanded(\n                          child: Column(\n                            crossAxisAlignment: CrossAxisAlignment.start,\n                            children: [\n                              Text(tasks[index], style: TextStyle(fontSize: 16, color: Colors.grey[800])),\n                              SizedBox(height: 5),\n                              Text(durations[index], style: TextStyle(color: Colors.grey[500], fontSize: 14)),\n                            ],\n                          ),\n                        ),\n                        Icon(Icons.more_horiz, color: Colors.grey[400], size: 20),\n                      ],\n                    ),\n                  );\n                },\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "category": "productivity",
    "tags": [
        "timer",
        "minimal",
        "clean",
        "simple",
        "monochrome",
        "typography"
    ],
    "components": [
        "AppBar",
        "Text",
        "FloatingActionButton",
        "TextField",
        "Container",
        "ListView",
        "Divider",
        "IconButton"
    ],
    "layout_type": "Column"
}