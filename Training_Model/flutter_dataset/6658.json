{
    "prompt": "Animated top-positioned PIN lock screen.",
    "flutter_code": "class GeneratedWidget extends StatefulWidget {\n  @override\n  _GeneratedWidgetState createState() => _GeneratedWidgetState();\n}\n\nclass _GeneratedWidgetState extends State<GeneratedWidget> {\n  String pin = '';\n  final int pinLength = 4;\n\n  void _onNumberPressed(String number) {\n    if (pin.length < pinLength) {\n      setState(() {\n        pin += number;\n      });\n    }\n  }\n\n  void _onDeletePressed() {\n    if (pin.isNotEmpty) {\n      setState(() {\n        pin = pin.substring(0, pin.length - 1);\n      });\n    }\n  }\n\n  Widget _buildPinSquare(bool filled) {\n    return AnimatedContainer(\n      duration: Duration(milliseconds: 200),\n      width: 50,\n      height: 50,\n      decoration: BoxDecoration(\n        borderRadius: BorderRadius.circular(12),\n        border: Border.all(color: Colors.white, width: 2),\n        color: filled ? Colors.deepPurple : Colors.transparent,\n        boxShadow: [\n          if (filled) BoxShadow(\n            color: Colors.deepPurple.withOpacity(0.5),\n            blurRadius: 8,\n            spreadRadius: 1,\n          ),\n        ],\n      ),\n      child: filled ? Icon(Icons.circle, color: Colors.white, size: 20) : null,\n    );\n  }\n\n  Widget _buildKeypadButton(String text, {VoidCallback? onPressed}) {\n    return Container(\n      width: 60,\n      height: 60,\n      child: ElevatedButton(\n        onPressed: onPressed,\n        style: ElevatedButton.styleFrom(\n          backgroundColor: Colors.white.withOpacity(0.2),\n          foregroundColor: Colors.deepPurple[800],\n          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),\n          elevation: 3,\n        ),\n        child: Text(text, style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold)),\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Container(\n        decoration: BoxDecoration(\n          gradient: LinearGradient(\n            begin: Alignment.topLeft,\n            end: Alignment.bottomRight,\n            colors: [Colors.deepPurple, Colors.blue],\n          ),\n        ),\n        child: SafeArea(\n          child: Padding(\n            padding: EdgeInsets.symmetric(horizontal: 30, vertical: 40),\n            child: Column(\n              children: [\n                SizedBox(height: 40),\n                Container(\n                  decoration: BoxDecoration(\n                    shape: BoxShape.circle,\n                    boxShadow: [\n                      BoxShadow(\n                        color: Colors.white.withOpacity(0.3),\n                        blurRadius: 15,\n                        spreadRadius: 3,\n                      ),\n                    ],\n                  ),\n                  child: Icon(Icons.shield, size: 100, color: Colors.white),\n                ),\n                SizedBox(height: 30),\n                Text('Protected App', style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold, color: Colors.white)),\n                SizedBox(height: 15),\n                Text('Enter 4-digit PIN', style: TextStyle(fontSize: 18, color: Colors.white.withOpacity(0.8))),\n                SizedBox(height: 40),\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  children: List.generate(pinLength, (index) => Padding(\n                    padding: EdgeInsets.symmetric(horizontal: 8),\n                    child: _buildPinSquare(index < pin.length),\n                  )),\n                ),\n                SizedBox(height: 40),\n                GridView.builder(\n                  shrinkWrap: true,\n                  physics: NeverScrollableScrollPhysics(),\n                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                    crossAxisCount: 3,\n                    crossAxisSpacing: 15,\n                    mainAxisSpacing: 15,\n                    childAspectRatio: 1,\n                  ),\n                  itemCount: 12,\n                  itemBuilder: (context, index) {\n                    if (index < 9) {\n                      String number = (index + 1).toString();\n                      return _buildKeypadButton(number, onPressed: () => _onNumberPressed(number));\n                    } else if (index == 9) {\n                      return Container();\n                    } else if (index == 10) {\n                      return _buildKeypadButton('0', onPressed: () => _onNumberPressed('0'));\n                    } else {\n                      return _buildKeypadButton('âŒ«', onPressed: _onDeletePressed);\n                    }\n                  },\n                ),\n                Spacer(),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "category": "security",
    "tags": [
        "app_lock",
        "gradient",
        "colorful",
        "animated",
        "shield",
        "pin"
    ],
    "components": [
        "Scaffold",
        "Container",
        "SafeArea",
        "Column",
        "Icon",
        "Text",
        "ElevatedButton",
        "GridView",
        "Row",
        "AnimatedContainer"
    ],
    "layout_type": "Column"
}